/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

/**
 *
 * @author hs_sa
 */
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.CabProfile;
import model.CabHistory;
import model.CabHistory;
import model.CabProfile;

public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
    CabHistory history;
    ArrayList<String> availability;
    ArrayList<String> availability1;
    ArrayList<String> brand;
    ArrayList<Integer> year;
    ArrayList<Integer> seats;
    ArrayList<String> serialnum;
    ArrayList<String> modelnum;
    ArrayList<String> manufacturer1;
    ArrayList<String> City;
    ArrayList<CabProfile> availabilityCar;
    ArrayList<CabProfile> availabilityCar1;
    ArrayList<CabProfile> brandnames;
    ArrayList<CabProfile> YearCar;
    ArrayList<CabProfile> SeatsCar;
    ArrayList<CabProfile> SerialnumCar;
    ArrayList<CabProfile> ModelnumCar;
    ArrayList<CabProfile> ManufacturerCar;
    ArrayList<CabProfile> CityName;
    ArrayList<CabProfile> CertificateYear;
    
    public SearchJPanel(CabHistory history) {
        initComponents();
        
        this.history = history;
        this.brand = new ArrayList();
        this.year = new ArrayList();
        this.seats = new ArrayList();
        this.serialnum = new ArrayList();
        this.modelnum = new ArrayList();
        this.manufacturer1 = new ArrayList<>();
        this.City = new ArrayList<>();
        
        
        pane11.setVisible(false);
        dropdown2.setVisible(false);
        dropdown3.setVisible(false);
//        dropdown4.setVisible(false);
//        dropdown41.setVisible(false);
        jPanelMinMax.setVisible(false);
        paneserial.setVisible(false);
        panemodel.setVisible(false);
        jPanelCity.setVisible(false);
        jLastUpatedTimePanel.setVisible(false);
        table17.setVisible(false);
        table18.setVisible(false);
        
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dropdown2 = new javax.swing.JComboBox<>();
        jFirstAvailableCar = new javax.swing.JButton();
        jCheckAvailableCar = new javax.swing.JButton();
        jManufacturers = new javax.swing.JButton();
        jLastUpdate = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLastUpatedTimePanel = new javax.swing.JPanel();
        jLabelLastUpdatedTime = new javax.swing.JLabel();
        jTextFieldLastUpdatedTime = new javax.swing.JTextField();
        jPanelCity = new javax.swing.JPanel();
        jLabelCity = new javax.swing.JLabel();
        jTextFieldCity = new javax.swing.JTextField();
        jButtonCitySubmit = new javax.swing.JButton();
        jPanelMinMax = new javax.swing.JPanel();
        Min = new javax.swing.JComboBox<>();
        jLabelMin = new javax.swing.JLabel();
        Min1 = new javax.swing.JComboBox<>();
        jLabelMin1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panemodel = new javax.swing.JPanel();
        lblmodel = new javax.swing.JLabel();
        txtmodel1 = new javax.swing.JTextField();
        jButtonSubmitModel = new javax.swing.JButton();
        paneserial = new javax.swing.JPanel();
        lblserial = new javax.swing.JLabel();
        txtserial1 = new javax.swing.JTextField();
        jButtonSerialSubmit = new javax.swing.JButton();
        table18 = new javax.swing.JScrollPane();
        tblCar2 = new javax.swing.JTable();
        table17 = new javax.swing.JScrollPane();
        tblCar1 = new javax.swing.JTable();
        pane11 = new javax.swing.JPanel();
        txtAvail = new javax.swing.JTextField();
        lblAvail = new javax.swing.JLabel();
        txtNotAvail = new javax.swing.JTextField();
        lblNotAvail = new javax.swing.JLabel();
        dropdown3 = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));

        dropdown2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        dropdown2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT BRAND", "TOYOTA", "TESLA", "BMW", "BENZ", "FERRARI" }));
        dropdown2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropdown2ActionPerformed(evt);
            }
        });

        jFirstAvailableCar.setBackground(new java.awt.Color(0, 153, 153));
        jFirstAvailableCar.setText("First Available Car");
        jFirstAvailableCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFirstAvailableCarActionPerformed(evt);
            }
        });

        jCheckAvailableCar.setBackground(new java.awt.Color(0, 153, 153));
        jCheckAvailableCar.setText("Check Available Car");
        jCheckAvailableCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckAvailableCarActionPerformed(evt);
            }
        });

        jManufacturers.setBackground(new java.awt.Color(0, 153, 153));
        jManufacturers.setText("Maunfacturers");
        jManufacturers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jManufacturersActionPerformed(evt);
            }
        });

        jLastUpdate.setBackground(new java.awt.Color(0, 153, 153));
        jLastUpdate.setText("Last Update");
        jLastUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLastUpdateActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(0, 153, 153));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT.... ", "List all the cars", "List all cars by a specific year", "List all the cars with a given number of seats", "Find a car by a serial number", "list cars model number", "list cars city", "list cars having expired certificate" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLastUpatedTimePanel.setBackground(new java.awt.Color(0, 204, 204));

        jLabelLastUpdatedTime.setText("Last Updated Time");

        jTextFieldLastUpdatedTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLastUpdatedTimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLastUpatedTimePanelLayout = new javax.swing.GroupLayout(jLastUpatedTimePanel);
        jLastUpatedTimePanel.setLayout(jLastUpatedTimePanelLayout);
        jLastUpatedTimePanelLayout.setHorizontalGroup(
            jLastUpatedTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldLastUpdatedTime)
            .addComponent(jLabelLastUpdatedTime, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
        );
        jLastUpatedTimePanelLayout.setVerticalGroup(
            jLastUpatedTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLastUpatedTimePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelLastUpdatedTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldLastUpdatedTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelCity.setBackground(new java.awt.Color(0, 204, 204));

        jLabelCity.setText("Enter a city name");

        jTextFieldCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCityActionPerformed(evt);
            }
        });

        jButtonCitySubmit.setText("Submit");
        jButtonCitySubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCitySubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCityLayout = new javax.swing.GroupLayout(jPanelCity);
        jPanelCity.setLayout(jPanelCityLayout);
        jPanelCityLayout.setHorizontalGroup(
            jPanelCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCityLayout.createSequentialGroup()
                .addGroup(jPanelCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCityLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanelCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCity)
                            .addComponent(jTextFieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelCityLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jButtonCitySubmit)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanelCityLayout.setVerticalGroup(
            jPanelCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCityLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCitySubmit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Min.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Max", "4", "5", "6", "7", "8", "9" }));
        Min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinActionPerformed(evt);
            }
        });

        jLabelMin.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelMin.setText("Min");

        Min1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MIN", "4", "5", "6", "7", "8", "9" }));

        jLabelMin1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelMin1.setText("Max");

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMinMaxLayout = new javax.swing.GroupLayout(jPanelMinMax);
        jPanelMinMax.setLayout(jPanelMinMaxLayout);
        jPanelMinMaxLayout.setHorizontalGroup(
            jPanelMinMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMinMaxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanelMinMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMin1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Min, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
            .addGroup(jPanelMinMaxLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelMinMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelMinMaxLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Min1, 0, 60, Short.MAX_VALUE)
                    .addGap(153, 153, 153)))
        );
        jPanelMinMaxLayout.setVerticalGroup(
            jPanelMinMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMinMaxLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanelMinMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMin)
                    .addComponent(jLabelMin1))
                .addGap(18, 18, 18)
                .addComponent(Min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(jPanelMinMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelMinMaxLayout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(Min1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(76, Short.MAX_VALUE)))
        );

        lblmodel.setText("Model Name");

        txtmodel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmodel1ActionPerformed(evt);
            }
        });

        jButtonSubmitModel.setText("Submit");
        jButtonSubmitModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitModelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panemodelLayout = new javax.swing.GroupLayout(panemodel);
        panemodel.setLayout(panemodelLayout);
        panemodelLayout.setHorizontalGroup(
            panemodelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panemodelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panemodelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panemodelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButtonSubmitModel))
                    .addComponent(lblmodel)
                    .addComponent(txtmodel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        panemodelLayout.setVerticalGroup(
            panemodelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panemodelLayout.createSequentialGroup()
                .addComponent(lblmodel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtmodel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSubmitModel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblserial.setText("Enter Serial Number");

        txtserial1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtserial1ActionPerformed(evt);
            }
        });

        jButtonSerialSubmit.setText("Submit");
        jButtonSerialSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSerialSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneserialLayout = new javax.swing.GroupLayout(paneserial);
        paneserial.setLayout(paneserialLayout);
        paneserialLayout.setHorizontalGroup(
            paneserialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneserialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneserialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneserialLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButtonSerialSubmit))
                    .addComponent(txtserial1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblserial))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paneserialLayout.setVerticalGroup(
            paneserialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneserialLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblserial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtserial1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jButtonSerialSubmit))
        );

        tblCar2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblCar2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Manufacturers"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table18.setViewportView(tblCar2);

        tblCar1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblCar1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Registration Date", "Availability", "Brand", "Manufacturing  Date", "City", "No of Seats", "Serial Number", "Model Number", "Certificate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table17.setViewportView(tblCar1);

        txtAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAvailActionPerformed(evt);
            }
        });

        lblAvail.setText("Available");

        lblNotAvail.setText("Not Available");

        javax.swing.GroupLayout pane11Layout = new javax.swing.GroupLayout(pane11);
        pane11.setLayout(pane11Layout);
        pane11Layout.setHorizontalGroup(
            pane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pane11Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(pane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pane11Layout.createSequentialGroup()
                        .addComponent(lblAvail)
                        .addGap(34, 34, 34)
                        .addComponent(lblNotAvail))
                    .addGroup(pane11Layout.createSequentialGroup()
                        .addComponent(txtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(txtNotAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        pane11Layout.setVerticalGroup(
            pane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pane11Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(pane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvail)
                    .addComponent(lblNotAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNotAvail, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(txtAvail))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dropdown3.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        dropdown3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT YEAR..", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));
        dropdown3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropdown3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jFirstAvailableCar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jCheckAvailableCar)
                        .addGap(46, 46, 46)
                        .addComponent(jManufacturers)
                        .addGap(64, 64, 64)
                        .addComponent(jLastUpdate)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLastUpatedTimePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelMinMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(paneserial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panemodel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dropdown3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(dropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(pane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(table17, javax.swing.GroupLayout.PREFERRED_SIZE, 1101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(table18, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 154, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFirstAvailableCar)
                    .addComponent(jCheckAvailableCar)
                    .addComponent(jManufacturers)
                    .addComponent(jLastUpdate))
                .addGap(34, 34, 34)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelMinMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLastUpatedTimePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanelCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paneserial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panemodel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dropdown3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(table18, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(table17, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(187, 319, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    protected void setDefaultOptions() {

        pane11.setVisible(false);
        table17.setVisible(false);
        jPanelMinMax.setVisible(false);
        paneserial.setVisible(false);
        panemodel.setVisible(false);
        table18.setVisible(false);
        dropdown2.setVisible(false);
        dropdown3.setVisible(false);
        jLastUpatedTimePanel.setVisible(false);
    }
    private void cartable6() {
        DefaultTableModel model = (DefaultTableModel) tblCar1.getModel();

        model.setRowCount(0);
//        System.out.println("size"+ history.getHistory().size());
        var temp = availabilityCar1.get(0);

        Object[] row = new Object[9];
        row[0] = temp.getRegistration_date();
        row[1] = temp.getOccupied();
        row[2] = temp.getBrand();
        row[3] = temp.getYear();
        row[4] = temp.getCity();
        row[5] = temp.getSeats();
        row[6] = temp.getSerial_number();
        row[7] = temp.getModel_number();
        row[8] = temp.getCerti_year();

        model.addRow(row);

    }
    
    public ArrayList<CabProfile> getavailability1(String avail) {
        this.availabilityCar1 = new ArrayList();
        for (CabProfile ch : history.getHistory()) {
            if (avail.equals(ch.getOccupied())) {
                availabilityCar1.add(ch);
            }
        }
        return availabilityCar1;

    }
    
    private void jFirstAvailableCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFirstAvailableCarActionPerformed
        // TODO add your handling code here:
        setDefaultOptions();

        table17.setVisible(true);

        revalidate();
        repaint();
        
        for (CabProfile ch : history.getHistory()) {
            String data = ch.getOccupied();
            if (data == "yes" || data == "Yes") {
                getavailability1(data);
                cartable6();
            }

        }
        
    }//GEN-LAST:event_jFirstAvailableCarActionPerformed

    
    private void jCheckAvailableCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckAvailableCarActionPerformed
        // TODO add your handling code here:
        
        setDefaultOptions();
        pane11.setVisible(true);

        int CarTotal = 0;
        int countCarAvail = 0;
        int countCarUnAvail = 0;
        for (CabProfile ch : history.getHistory()) {
            CarTotal++;
            if (ch.getOccupied() == "yes" || ch.getOccupied() == "Yes" || ch.getOccupied() == "YES") {
                countCarAvail++;
            }
        }
        countCarUnAvail = CarTotal - countCarAvail;
        txtAvail.setText(String.valueOf(countCarAvail));
        txtNotAvail.setText(String.valueOf(countCarUnAvail));
    }//GEN-LAST:event_jCheckAvailableCarActionPerformed

    private void jTextFieldCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCityActionPerformed

    private void txtmodel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmodel1ActionPerformed
        // TODO add your handling code here:

//        String selectedvalue5 = txtmodel1.getText();
//
//        getModelnum(selectedvalue5);
//        cartable5();
//        table17.setVisible(true);
//        revalidate();
//        repaint();
    }//GEN-LAST:event_txtmodel1ActionPerformed

    private void txtserial1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtserial1ActionPerformed
        // TODO add your handling code here:

//        int selectedvalue4 = Integer.parseInt(txtserial1.getText());
//
//        getserialnum1(selectedvalue4);
//        cartable4();
//        table17.setVisible(true);
//        revalidate();
//        repaint();
    }//GEN-LAST:event_txtserial1ActionPerformed

    private void dropdown3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropdown3ActionPerformed
        // TODO add your handling code here:

//        int selectedvalue2 = Integer.parseInt((String) dropdown3.getSelectedItem());
//
//        getYear1(selectedvalue2);
//        cartable2();
//        table17.setVisible(true);
//        revalidate();
//        repaint();
    }//GEN-LAST:event_dropdown3ActionPerformed

    private void dropdown2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropdown2ActionPerformed
        // TODO add your handling code here:

String selectedvalue1 = dropdown2.getSelectedItem().toString();

        if (selectedvalue1.equals("SELECT...")) {

            table17.setVisible(true);
            revalidate();
            repaint();
        }

        getBrandName(selectedvalue1);
        cartable1();
        table17.setVisible(true);
        revalidate();
        repaint();
    }//GEN-LAST:event_dropdown2ActionPerformed

    private void cartable1() {
        DefaultTableModel model = (DefaultTableModel) tblCar1.getModel();

        model.setRowCount(0);
//        System.out.println("size"+ history.getHistory().size());

        for (CabProfile CAR : brandnames) {

            Object[] row = new Object[9];
            row[0] = CAR.getRegistration_date();
            row[1] = CAR.getOccupied();
            row[2] = CAR.getBrand();
            row[3] = CAR.getYear();
            row[4] = CAR.getCity();
            row[5] = CAR.getSeats();
            row[6] = CAR.getSerial_number();
            row[7] = CAR.getModel_number();
            row[8] = CAR.getCerti_year();

            model.addRow(row);

        }
    }
    public ArrayList<CabProfile> getBrandName(String brandName1) {
        this.brandnames = new ArrayList();
        for (CabProfile ch : history.getHistory()) {
            if (brandName1.equals(ch.getBrand())) {
                brandnames.add(ch);
            }
        }
        return brandnames;
    }
    private void txtAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAvailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAvailActionPerformed

    private void jManufacturersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jManufacturersActionPerformed
        // TODO add your handling code here:
        
        setDefaultOptions();
        table18.setVisible(true);
        revalidate();
        repaint();
        getmanufacturers();
//        for (Car ch : history.getHistory()) {
//            if (!list.contains(ch.getBrand())) {
//                getmanufacturers(ch.getBrand());
//                list.add(ch.getBrand());
//                
//            }
//        }
        cartable9();
    }//GEN-LAST:event_jManufacturersActionPerformed

    private void jTextFieldLastUpdatedTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLastUpdatedTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLastUpdatedTimeActionPerformed

    private void jLastUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLastUpdateActionPerformed
        // TODO add your handling code here:
        setDefaultOptions();
     jLastUpatedTimePanel.setVisible(true);


        try {
            // TODO add your handling code here:
            getLastUpdated();
            
        } catch (ParseException ex) {
            Logger.getLogger(SearchJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLastUpdateActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        setDefaultOptions();
        String selectedvalue = jComboBox1.getSelectedItem().toString();

        if (selectedvalue.equals("List all the cars")) {

            dropdown2.setVisible(true);
        }

        if (!selectedvalue.equals("List all the cars")) {

            dropdown2.setVisible(false);
            table17.setVisible(false);
        }

        if (selectedvalue.equals("List all cars by a specific year")) {

            dropdown3.setVisible(true);
        }

        if (!selectedvalue.equals("List all cars by a specific year")) {

            dropdown3.setVisible(false);
            table17.setVisible(false);
        }

        if (selectedvalue.equals("List all the cars with a given number of seats")) {

            jPanelMinMax.setVisible(true);
        }

        if (!selectedvalue.equals("List all the cars with a given number of seats")) {

            jPanelMinMax.setVisible(false);
            table17.setVisible(false);
        }

        if (selectedvalue.equals("Find a car by a serial number")) {

            paneserial.setVisible(true);
            revalidate();
            repaint();
        }

        if (!selectedvalue.equals("Find a car by a serial number")) {

            paneserial.setVisible(false);
            table17.setVisible(false);
        }

        if (selectedvalue.equals("list cars model number")) {

            panemodel.setVisible(true);
            revalidate();
            repaint();
        }

        if (!selectedvalue.equals("list cars model number")) {

            panemodel.setVisible(false);
            table17.setVisible(false);
        }

        if (selectedvalue.equals("list cars city")) {

            jPanelCity.setVisible(true);
            revalidate();
            repaint();
        }

        if (!selectedvalue.equals("list cars city")) {

            jPanelCity.setVisible(false);
            table17.setVisible(false);
        }

        if (selectedvalue.equals("list cars having expired certificate")) {

            getCertiYear();
            cartable8();
            table17.setVisible(true);
            revalidate();
            repaint();
        }

        if (!selectedvalue.equals("list cars having expired certificate")) {

            table17.setVisible(false);

        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String selectedvalue11 = jComboBox1.getSelectedItem().toString();

        if (selectedvalue11.equals("List all the cars with a given number of seats")) {
            int selectedvalue3 = Integer.parseInt((String) Min.getSelectedItem());
            int selectedvalue31 = Integer.parseInt((String) Min1.getSelectedItem());

            getSeats1(selectedvalue31, selectedvalue3);
            cartable3();
            table17.setVisible(true);
            revalidate();
            repaint();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public ArrayList<CabProfile> getSeats1(Integer minSeat, Integer maxSeat) {
        this.SeatsCar = new ArrayList();
        for (var i = minSeat; i <= maxSeat; i++) {
            for (CabProfile ch : history.getHistory()) {
                if (i.equals(ch.getSeats())) {
                    SeatsCar.add(ch);
                }
            }
        }
        return SeatsCar;
    }
    public ArrayList<CabProfile> getSerialNumber(String serialNum) {
        this.SerialnumCar = new ArrayList();
        
            for (CabProfile ch : history.getHistory()) {
                if (ch.getSerial_number().equals(serialNum)) {
                    SerialnumCar.add(ch);
                }
            }
        
        return SerialnumCar;
    }
    private void cartable3() {
        DefaultTableModel model = (DefaultTableModel) tblCar1.getModel();

        model.setRowCount(0);
//        System.out.println("size"+ history.getHistory().size());

        for (CabProfile CAR : SeatsCar) {

            Object[] row = new Object[9];
            row[0] = CAR.getRegistration_date();
            row[1] = CAR.getOccupied();
            row[2] = CAR.getBrand();
            row[3] = CAR.getYear();
            row[4] = CAR.getCity();
            row[5] = CAR.getSeats();
            row[6] = CAR.getSerial_number();
            row[7] = CAR.getModel_number();
            row[8] = CAR.getCerti_year();

            model.addRow(row);

        }
    }
    private void MinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MinActionPerformed

    private void jButtonSerialSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSerialSubmitActionPerformed
        // TODO add your handling code here:
        
        String selectedvalue11 = jComboBox1.getSelectedItem().toString();

        if (selectedvalue11.equals("Find a car by a serial number")) {
            String serialNo = txtserial1.getText();
            getSerialNumber(serialNo);
            cartableSerial();
            table17.setVisible(true);
            revalidate();
            repaint();
        }
        
        
        
    }//GEN-LAST:event_jButtonSerialSubmitActionPerformed

    public ArrayList<CabProfile> getCityName(String cityName) {
        this.CityName = new ArrayList();
        
            for (CabProfile ch : history.getHistory()) {
                if (ch.getCity().equals(cityName)) {
                    CityName.add(ch);
                }
            }
        
        return CityName;
    }
    private void jButtonCitySubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCitySubmitActionPerformed
        // TODO add your handling code here:
        String selectedvalue11 = jComboBox1.getSelectedItem().toString();

        if (selectedvalue11.equals("list cars city")) {
            String cityName = jTextFieldCity.getText();
            getCityName(cityName);
            cartableCity();
            table17.setVisible(true);
            revalidate();
            repaint();
        }
    }//GEN-LAST:event_jButtonCitySubmitActionPerformed

    
    private void jButtonSubmitModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitModelActionPerformed
        // TODO add your handling code here:
        String selectedvalue11 = jComboBox1.getSelectedItem().toString();

        if (selectedvalue11.equals("list cars model number")) {
            String modelName = txtmodel1.getText();
            getModelName(modelName);
            cartableModel();
            table17.setVisible(true);
            revalidate();
            repaint();
        }
        
    }//GEN-LAST:event_jButtonSubmitModelActionPerformed

    private void cartableModel() {
        DefaultTableModel model = (DefaultTableModel) tblCar1.getModel();

        model.setRowCount(0);
//        System.out.println("size"+ history.getHistory().size());

        for (CabProfile CAR : ModelnumCar) {

            Object[] row = new Object[9];
            row[0] = CAR.getRegistration_date();
            row[1] = CAR.getOccupied();
            row[2] = CAR.getBrand();
            row[3] = CAR.getYear();
            row[4] = CAR.getCity();
            row[5] = CAR.getSeats();
            row[6] = CAR.getSerial_number();
            row[7] = CAR.getModel_number();
            row[8] = CAR.getCerti_year();

            model.addRow(row);

        }
    }
    public ArrayList<CabProfile> getModelName(String modelName) {
        this.ModelnumCar = new ArrayList();
        
            for (CabProfile ch : history.getHistory()) {
                if (ch.getModel_number().equals(modelName)) {
                    ModelnumCar.add(ch);
                }
            }
        
        return CityName;
    }
    
    private void cartableSerial() {
        DefaultTableModel model = (DefaultTableModel) tblCar1.getModel();

        model.setRowCount(0);
//        System.out.println("size"+ history.getHistory().size());

        for (CabProfile CAR : SerialnumCar) {

            Object[] row = new Object[9];
            row[0] = CAR.getRegistration_date();
            row[1] = CAR.getOccupied();
            row[2] = CAR.getBrand();
            row[3] = CAR.getYear();
            row[4] = CAR.getCity();
            row[5] = CAR.getSeats();
            row[6] = CAR.getSerial_number();
            row[7] = CAR.getModel_number();
            row[8] = CAR.getCerti_year();

            model.addRow(row);

        }
    }
    
    private void cartableCity() {
        DefaultTableModel model = (DefaultTableModel) tblCar1.getModel();

        model.setRowCount(0);
//        System.out.println("size"+ history.getHistory().size());

        for (CabProfile CAR : CityName) {

            Object[] row = new Object[9];
            row[0] = CAR.getRegistration_date();
            row[1] = CAR.getOccupied();
            row[2] = CAR.getBrand();
            row[3] = CAR.getYear();
            row[4] = CAR.getCity();
            row[5] = CAR.getSeats();
            row[6] = CAR.getSerial_number();
            row[7] = CAR.getModel_number();
            row[8] = CAR.getCerti_year();

            model.addRow(row);

        }
    }
    
    private void cartable8() {

        DefaultTableModel model = (DefaultTableModel) tblCar1.getModel();

        model.setRowCount(0);
//        System.out.println("size"+ history.getHistory().size());

        for (CabProfile CAR : CertificateYear) {

            Object[] row = new Object[9];
            row[0] = CAR.getRegistration_date();
            row[1] = CAR.getOccupied();
            row[2] = CAR.getBrand();
            row[3] = CAR.getYear();
            row[4] = CAR.getCity();
            row[5] = CAR.getSeats();
            row[6] = CAR.getSerial_number();
            row[7] = CAR.getModel_number();
            row[8] = CAR.getCerti_year();

            model.addRow(row);

        }

    }
    public ArrayList<CabProfile> getCertiYear() {
        this.CertificateYear = new ArrayList();
        for (CabProfile ch : history.getHistory()) {
            int d = java.time.LocalDate.now().getYear();
            if (ch.getCerti_year() <= d) {
                CertificateYear.add(ch);
            }
        }
        return CertificateYear;
    }
    private void cartable9() {

        DefaultTableModel model = (DefaultTableModel) tblCar2.getModel();

        model.setRowCount(0);
        List<String> list = new ArrayList();
//        System.out.println("size"+ history.getHistory().size());
        Object[] row = new Object[1];
        Object[] temp = new Object[1];
        for (CabProfile CAR : ManufacturerCar) {

            row[0] = CAR.getBrand();
            list.add(CAR.getBrand());
            model.addRow(row);
        }

    }
    
    private void getLastUpdated() throws ParseException {
        List<Date> date = new ArrayList();
        DateFormat format = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss", Locale.ENGLISH);
        for (CabProfile ch : history.getHistory()) {
            Date date1 = format.parse(ch.getTime());
            date.add(date1);
        }
        var last = Collections.max(date);
        System.out.println(last);
        jTextFieldLastUpdatedTime.setText(last.toString());
    }
    
    public ArrayList<CabProfile> getmanufacturers() {

        this.ManufacturerCar = new ArrayList();
        List<String> list = new ArrayList<String>();

        for (CabProfile ch : history.getHistory()) {
            if (!list.contains(ch.getBrand())) {
                ManufacturerCar.add(ch);
                list.add(ch.getBrand());
            }

        }
        return ManufacturerCar;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Min;
    private javax.swing.JComboBox<String> Min1;
    private javax.swing.JComboBox<String> dropdown2;
    private javax.swing.JComboBox<String> dropdown3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCitySubmit;
    private javax.swing.JButton jButtonSerialSubmit;
    private javax.swing.JButton jButtonSubmitModel;
    private javax.swing.JButton jCheckAvailableCar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JButton jFirstAvailableCar;
    private javax.swing.JLabel jLabelCity;
    private javax.swing.JLabel jLabelLastUpdatedTime;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JLabel jLabelMin1;
    private javax.swing.JPanel jLastUpatedTimePanel;
    private javax.swing.JButton jLastUpdate;
    private javax.swing.JButton jManufacturers;
    private javax.swing.JPanel jPanelCity;
    private javax.swing.JPanel jPanelMinMax;
    private javax.swing.JTextField jTextFieldCity;
    private javax.swing.JTextField jTextFieldLastUpdatedTime;
    private javax.swing.JLabel lblAvail;
    private javax.swing.JLabel lblNotAvail;
    private javax.swing.JLabel lblmodel;
    private javax.swing.JLabel lblserial;
    private javax.swing.JPanel pane11;
    private javax.swing.JPanel panemodel;
    private javax.swing.JPanel paneserial;
    private javax.swing.JScrollPane table17;
    private javax.swing.JScrollPane table18;
    private javax.swing.JTable tblCar1;
    private javax.swing.JTable tblCar2;
    private javax.swing.JTextField txtAvail;
    private javax.swing.JTextField txtNotAvail;
    private javax.swing.JTextField txtmodel1;
    private javax.swing.JTextField txtserial1;
    // End of variables declaration//GEN-END:variables
}
